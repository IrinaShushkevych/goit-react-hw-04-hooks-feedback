{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Container/Container.module.css","components/Feedback/Feedback.module.css","components/Notification/Notification.module.css","components/Container/Container.jsx","components/Feedback/Feedback.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","App.js","index.js"],"names":["module","exports","Container","title","children","className","s","container","Feedback","options","addVoice","map","el","type","button","onClick","Statistics","total","positivePercentage","list","Object","keys","item","numbers","Notification","message","text","types","App","useState","good","setGood","neutral","setNeutral","bad","setBad","positive","Math","round","state","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0IACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,KAAO,yBAAyB,QAAU,4BAA4B,KAAO,yBAAyB,QAAU,4BAA4B,IAAM,wBAAwB,QAAU,4BAA4B,OAAS,6B,mBCA3QD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,MAAQ,2B,iBCAnED,EAAOC,QAAU,CAAC,OAAS,2B,gBCA3BD,EAAOC,QAAU,CAAC,KAAO,6B,sKCgBVC,MAdf,YAA8C,IAAD,IAAxBC,aAAwB,MAAhB,GAAgB,EAAZC,EAAY,EAAZA,SAC/B,OACE,sBAAKC,UAAWC,IAAEC,UAAlB,UACGJ,GAAS,oBAAIE,UAAWC,IAAEH,MAAjB,SAAyBA,IAClCC,M,gBCsBQI,MA1Bf,YAA0C,IAAtBC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,SAC3B,OACE,mCACE,8BACGD,EAAQE,KAAI,SAACC,GAAD,OACX,wBACEC,KAAK,SACLR,UAAWC,IAAEQ,OACbC,QAAS,WACPL,EAASE,IAJb,SAQGA,GAFIA,W,gBCgBFI,MA3Bf,YAA6D,IAAvCP,EAAsC,EAAtCA,QAASQ,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBACpC,OACE,mCACE,qBAAIb,UAAWC,IAAEa,KAAjB,UACGC,OAAOC,KAAKZ,GAASE,KAAI,SAACC,GAAD,OACxB,qBAAIP,UAAWC,IAAEgB,KAAjB,UACGV,EADH,KACQ,sBAAMP,UAAS,UAAKC,IAAEiB,QAAP,YAAkBjB,IAAEM,IAAnC,SAA2CH,EAAQG,OAD/BA,MAI9B,qBAAIP,UAAS,UAAKC,IAAEgB,KAAP,KAAb,oBACS,sBAAMjB,UAAS,UAAKC,IAAEiB,QAAP,KAAf,SAAmCN,OAE5C,qBAAIZ,UAAWC,IAAEgB,KAAjB,+BACqB,IACnB,uBAAMjB,UAAS,UAAKC,IAAEiB,QAAP,KAAf,UAAmCL,EAAnC,gB,gBCNKM,MARf,YAAyC,IAAD,IAAhBC,eAAgB,MAAN,GAAM,EACtC,OAAO,mCAAGA,GAAW,mBAAGpB,UAAWC,IAAEoB,KAAhB,SAAuBD,OCGxCE,EAAQ,CAAC,OAAQ,UAAW,OAEnB,SAASC,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BF,mBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAsBJ,mBAAS,GAA/B,mBAAOK,EAAP,KAAYC,EAAZ,KAkBMlB,EAAQa,EAAOE,EAAUE,EACzBE,EAAWC,KAAKC,MAAOR,EAAOb,EAAS,KAE7C,OACE,sBAAKZ,UAAU,MAAf,UACE,cAAC,EAAD,CAAWF,MAAM,wBAAjB,SACE,cAAC,EAAD,CAAUM,QAASkB,EAAOjB,SAtBb,SAACG,GAClB,OAAQA,GACN,IAAK,OACHkB,GAAQ,SAACQ,GAAD,OAAWA,EAAQ,KAC3B,MACF,IAAK,UACHN,GAAW,SAACM,GAAD,OAAWA,EAAQ,KAC9B,MACF,IAAK,MACHJ,GAAO,SAACI,GAAD,OAAWA,EAAQ,WAe5B,cAAC,EAAD,CAAWpC,MAAM,aAAjB,SACGc,EAAQ,EACP,cAAC,EAAD,CACER,QAAS,CAAEqB,OAAME,UAASE,OAC1BjB,MAAOA,EACPC,mBAAoBkB,IAGtB,cAAC,EAAD,CAAcX,QAAQ,8BCxChCe,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b65a4522.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__HtOWM\",\"item\":\"Statistics_item__3nf2r\",\"numbers\":\"Statistics_numbers__2dOxZ\",\"good\":\"Statistics_good__3gjs8\",\"neutral\":\"Statistics_neutral__Hqipn\",\"bad\":\"Statistics_bad__PuI82\",\"visible\":\"Statistics_visible__2cMyE\",\"hidden\":\"Statistics_hidden__1mfWF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3w_fJ\",\"title\":\"Container_title__3Sk39\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Feedback_button__3i_vg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Notification_text__2iOUX\"};","import PropTypes from 'prop-types'\nimport s from './Container.module.css'\n\nfunction Container({ title = '', children }) {\n  return (\n    <div className={s.container}>\n      {title && <h2 className={s.title}>{title}</h2>}\n      {children}\n    </div>\n  )\n}\n\nContainer.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n}\n\nexport default Container\n","import PropTypes from 'prop-types'\nimport s from './Feedback.module.css'\n\nfunction Feedback({ options, addVoice }) {\n  return (\n    <>\n      <div>\n        {options.map((el) => (\n          <button\n            type=\"button\"\n            className={s.button}\n            onClick={() => {\n              addVoice(el)\n            }}\n            key={el}\n          >\n            {el}\n          </button>\n        ))}\n      </div>\n    </>\n  )\n}\n\nFeedback.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n  addVoice: PropTypes.func.isRequired,\n}\n\nexport default Feedback\n","import PropTypes from 'prop-types'\nimport s from './Statistics.module.css'\n\nfunction Statistics({ options, total, positivePercentage }) {\n  return (\n    <>\n      <ul className={s.list}>\n        {Object.keys(options).map((el) => (\n          <li className={s.item} key={el}>\n            {el}: <span className={`${s.numbers} ${s[el]}`}>{options[el]}</span>\n          </li>\n        ))}\n        <li className={`${s.item} `}>\n          Total: <span className={`${s.numbers} `}>{total}</span>\n        </li>\n        <li className={s.item}>\n          Positive feedback:{' '}\n          <span className={`${s.numbers} `}>{positivePercentage}%</span>\n        </li>\n      </ul>\n    </>\n  )\n}\n\nStatistics.propTypes = {\n  options: PropTypes.object.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n}\n\nexport default Statistics\n","import PropTypes from 'prop-types'\nimport s from './Notification.module.css'\n\nfunction Notification({ message = '' }) {\n  return <>{message && <p className={s.text}>{message}</p>}</>\n}\n\nNotification.propTypes = {\n  message: PropTypes.string,\n}\n\nexport default Notification\n","import { useState } from \"react\";\nimport \"./App.css\";\nimport Container from \"./components/Container/Container\";\nimport Feedback from \"./components/Feedback/Feedback\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport Notification from \"./components/Notification/Notification\";\n\nconst types = [\"good\", \"neutral\", \"bad\"];\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const onSetVoice = (type) => {\n    switch (type) {\n      case \"good\":\n        setGood((state) => state + 1);\n        break;\n      case \"neutral\":\n        setNeutral((state) => state + 1);\n        break;\n      case \"bad\":\n        setBad((state) => state + 1);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const total = good + neutral + bad;\n  const positive = Math.round((good / total) * 100);\n\n  return (\n    <div className=\"App\">\n      <Container title=\"Please leave feedback\">\n        <Feedback options={types} addVoice={onSetVoice} />\n      </Container>\n      <Container title=\"Statistics\">\n        {total > 0 ? (\n          <Statistics\n            options={{ good, neutral, bad }}\n            total={total}\n            positivePercentage={positive}\n          />\n        ) : (\n          <Notification message=\"There is no feedback\" />\n        )}\n      </Container>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}